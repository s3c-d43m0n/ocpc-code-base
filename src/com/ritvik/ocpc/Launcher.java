/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ritvik.ocpc;

import java.io.IOException;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ritvikc
 */
public class Launcher extends javax.swing.JFrame {

    String version = "1.3";
    /**
     * Creates new form Launcher
     */
    public Launcher() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        vUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        vOldPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        vNewPassword = new javax.swing.JPasswordField();
        vNewPassword2 = new javax.swing.JPasswordField();
        vChangeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        vCheckCaps = new javax.swing.JCheckBox();
        vCheckSpecial = new javax.swing.JCheckBox();
        vCheckNumber = new javax.swing.JCheckBox();
        vCheckSmall = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        vRemoveServer = new javax.swing.JButton();
        vAddServer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        vServerTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OCPC - One Click Password Change");
        setAlwaysOnTop(true);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Elephant", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ritvik/ocpc/images/logo.png"))); // NOI18N
        jLabel1.setLabelFor(jLabel1);
        jLabel1.setText("  OCPC - One Click Password Change");
        jLabel1.setToolTipText("One Click PAssword Changer Utility for Updating PAssword on Multiple Server at Once.");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        vUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vUsername.setToolTipText("Enter USername Here");
        vUsername.setNextFocusableComponent(vOldPassword);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter Username:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vUsername))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        vOldPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vOldPassword.setToolTipText("Enter Current  Password Here");
        vOldPassword.setNextFocusableComponent(vNewPassword);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Enter Current Password:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vOldPassword))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vOldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Enter New Password:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Confirm New Password:");

        vNewPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vNewPassword.setToolTipText("Enter New Password Here");
        vNewPassword.setNextFocusableComponent(vNewPassword2);
        vNewPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vNewPasswordFocusLost(evt);
            }
        });
        vNewPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vNewPasswordKeyReleased(evt);
            }
        });

        vNewPassword2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vNewPassword2.setToolTipText("Confirm New Password Here");
        vNewPassword2.setNextFocusableComponent(vChangeButton);
        vNewPassword2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                vNewPassword2FocusLost(evt);
            }
        });
        vNewPassword2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vNewPassword2KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vNewPassword)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vNewPassword2))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vNewPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        vChangeButton.setText("Update Password on All Servers");
        vChangeButton.setEnabled(false);
        vChangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vChangeButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password Note:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 0, 0));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(3);
        jTextArea1.setTabSize(4);
        jTextArea1.setText("1. Passwords must be at least [6] characters in length. Longer passwords and passphrases are strongly encouraged.\n2. Password should contain at least one capital, one small, one numeric and one special charecter. Supported speacial characters   ~ ! @ # $ % ^ & * - + _ = ? :");
        jTextArea1.setToolTipText("");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password Strength", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        vCheckCaps.setText("Capital");
        vCheckCaps.setEnabled(false);

        vCheckSpecial.setText("Special");
        vCheckSpecial.setEnabled(false);

        vCheckNumber.setText("Numeric");
        vCheckNumber.setEnabled(false);

        vCheckSmall.setText("Small");
        vCheckSmall.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vCheckSmall)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vCheckCaps)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vCheckNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vCheckSpecial)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vCheckSmall)
                    .addComponent(vCheckCaps)
                    .addComponent(vCheckNumber)
                    .addComponent(vCheckSpecial))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vChangeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vChangeButton)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Unix/Linux Server List", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        vRemoveServer.setText("-");
        vRemoveServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vRemoveServerActionPerformed(evt);
            }
        });

        vAddServer.setText("+");
        vAddServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vAddServerActionPerformed(evt);
            }
        });

        vServerTable.setAutoCreateRowSorter(true);
        vServerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Server Name", "Comment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vServerTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        vServerTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(vServerTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(vAddServer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vRemoveServer))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vRemoveServer)
                    .addComponent(vAddServer))
                .addContainerGap())
        );

        jLabel6.setForeground(java.awt.Color.gray);
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Designed & Developed by: TMUS Automation Offshore Team");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vNewPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vNewPasswordKeyReleased
        // TODO add your handling code here:
        passwordTextChange();
    }//GEN-LAST:event_vNewPasswordKeyReleased

    private void vNewPassword2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vNewPassword2KeyReleased
        // TODO add your handling code here:
        passwordTextChange();
    }//GEN-LAST:event_vNewPassword2KeyReleased

    private void vNewPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vNewPasswordFocusLost
        // TODO add your handling code here:
        passwordTextChange();
    }//GEN-LAST:event_vNewPasswordFocusLost

    private void vNewPassword2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_vNewPassword2FocusLost
        // TODO add your handling code here:
        passwordTextChange();
    }//GEN-LAST:event_vNewPassword2FocusLost

    private void vAddServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vAddServerActionPerformed
        // TODO add your handling code here:
        vAddServer.setEnabled(false);
        vRemoveServer.setEnabled(false);
        String vServer = JOptionPane.showInputDialog(Launcher.this, "Hostname[:PORT]", "Please Enter Server Details (Port Optional)", JOptionPane.QUESTION_MESSAGE);
        if(vServer!=null){
            if(vServer.matches("^[a-zA-Z0-9\\.\\-]+(:[0-9]+)?$")){
                try {
                    Config.addServerToList(vServer);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(Launcher.this, "Unable to Add Server Entry", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
                }
                loadServerList();
            }
            else{
                JOptionPane.showMessageDialog(Launcher.this, "Please enter valid hostname and port", "Invalid Entry", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        vAddServer.setEnabled(true);
        vRemoveServer.setEnabled(true);
    }//GEN-LAST:event_vAddServerActionPerformed

    private void vRemoveServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vRemoveServerActionPerformed
        // TODO add your handling code here:
        vAddServer.setEnabled(false);
        vRemoveServer.setEnabled(false);
        
        DefaultTableModel t = (DefaultTableModel)vServerTable.getModel();
        
        int c = vServerTable.getSelectedColumn();
        int r = vServerTable.getSelectedRow();
        
        if(c!=-1 && r!=-1){
            String entry = (String)t.getValueAt(vServerTable.convertRowIndexToModel(vServerTable.getSelectedRow()), 0);
            if(entry!=null && !entry.isEmpty()){
                int value = JOptionPane.showConfirmDialog(Launcher.this, "<html><body>Are you sure you want to delete below server?<br/><br/><h2>"+entry+"</h2><br/></body></html>", "Please Confirm...", JOptionPane.YES_NO_OPTION);
                if(value==0){
                    Config.removeServer(entry,this);
                }
            }
            else{
                JOptionPane.showMessageDialog(Launcher.this, "Please select server name first.", "No Selection", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(Launcher.this, "Please select server name first.", "No Selection", JOptionPane.ERROR_MESSAGE);
        }
        loadServerList();       
        vAddServer.setEnabled(true);
        vRemoveServer.setEnabled(true);
        
    }//GEN-LAST:event_vRemoveServerActionPerformed

    private void vChangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vChangeButtonActionPerformed
        // TODO add your handling code here:
        vAddServer.setEnabled(false);
        vRemoveServer.setEnabled(false);
        vChangeButton.setEnabled(false);
        vOldPassword.setEditable(false);
        vNewPassword.setEditable(false);
        vNewPassword2.setEditable(false);
        String xUsername = vUsername.getText();
        String xOldPass  = String.valueOf(vOldPassword.getPassword());
        String xNewPass  = String.valueOf(vNewPassword.getPassword());

        DefaultTableModel t = (DefaultTableModel)vServerTable.getModel();
        int rows=t.getRowCount();
        Boolean [] vProcessFinish = new Boolean[rows];
        for(int j=0; j<rows; j++) vProcessFinish[j]=false;
        
        new Thread(() -> {
        for(int i=0; i<rows; i++){
            String vServerString = (String)t.getValueAt(i, 0);
            t.setValueAt("Working", i, 1);
            t.setValueAt(new Server(vServerString,xUsername,xOldPass,xNewPass).changePassword(), i, 1);
            vProcessFinish[i]=true;
        }
        }).start();
        
        new Thread(() -> {
            boolean loop = false;
            while(!loop){
                loop=true;
                for(int x=0; x<rows; x++) loop&=vProcessFinish[x];
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {}
                
            }
            vAddServer.setEnabled(true);
            vRemoveServer.setEnabled(true);
            vOldPassword.setText("");
            vNewPassword.setText("");
            vNewPassword2.setText("");
            vOldPassword.setEditable(true);
            vNewPassword.setEditable(true);
            vNewPassword2.setEditable(true);
        }).start();
    }//GEN-LAST:event_vChangeButtonActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(Launcher.this, "<html><body><div align=center><h3>One Click Password Change v"+version+"</h3>A Smart Tool for Changing your Unix/Linux Password.<br/><br/>Designed &amp; Developed by:<br/><b>Pratiksha Rao, Ritvik Chauhan, Samir Shah</b></div></body></html>", "About", JOptionPane.INFORMATION_MESSAGE);
       
    }//GEN-LAST:event_jLabel6MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Launcher x = new Launcher();
                x.setVisible(true);
                x.pack();
                x.updateUsername();
                x.loadServerList();
                x.focusOnOldPassword();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton vAddServer;
    private javax.swing.JButton vChangeButton;
    private javax.swing.JCheckBox vCheckCaps;
    private javax.swing.JCheckBox vCheckNumber;
    private javax.swing.JCheckBox vCheckSmall;
    private javax.swing.JCheckBox vCheckSpecial;
    private javax.swing.JPasswordField vNewPassword;
    private javax.swing.JPasswordField vNewPassword2;
    private javax.swing.JPasswordField vOldPassword;
    private javax.swing.JButton vRemoveServer;
    private javax.swing.JTable vServerTable;
    private javax.swing.JTextField vUsername;
    // End of variables declaration//GEN-END:variables
    
    void passwordTextChange(){
        boolean vEnableButton=false;
        
        char vNew [] = vNewPassword.getPassword();
        char vNew2 [] = vNewPassword2.getPassword();
        
        boolean cap=false;
        boolean sml=false;
        boolean num=false;
        boolean spl=false;
        
        for(int i=0; i<vNew.length; i++){
            char c = vNew[i];
            if(Character.isUpperCase(c)){
                cap=true;
            }
            if(Character.isLowerCase(c)){
                sml=true;
            }
            if(Character.isDigit(c)){
                num=true;
            }                    
            if(String.valueOf(c).matches("^[\\~\\!\\@\\#\\$\\%\\^\\&\\*\\-\\+\\_\\=\\?\\:]$")){
                spl=true;
            }
        }
        
        vCheckSmall.setSelected(sml);
        vCheckNumber.setSelected(num);
        vCheckCaps.setSelected(cap);
        vCheckSpecial.setSelected(spl);
        
        if(vNew.length==vNew2.length && vNew.length>=6){
            int vLength = vNew.length;
            boolean match=true;
            for(int i=0;i<vLength;i++){
                if(vNew[i] != vNew2[i]){
                    match=false;
                    break;
                }
            }
            if(match){
                boolean sup=true;
                
                for(int i=0; i<vLength; i++){
                    char c = vNew[i];
                    if(!String.valueOf(c).matches("^[a-zA-Z0-9 \\~\\!\\@\\#\\$\\%\\^\\&\\*\\-\\+\\_\\=\\?\\:]$")){
                        sup=false;
                    }
                }                
                //Force User to Have Required Checks
                //vEnableButton = cap & sml & num & spl & sup;
                vEnableButton = sup;
            }
        }
        vChangeButton.setEnabled(vEnableButton);        
    }

    private void updateUsername() {
        vUsername.setText(System.getProperty("user.name"));
    }

    private void loadServerList() {
        resetTable();
        HashSet<String> s = new HashSet<String>(Config.getServerList(this));
        for(String server : s){
            if(server.matches("^[a-zA-Z0-9\\.\\-]+(:[0-9]+)?$")){
                addToTable(server);
            }
        }
    }

    void resetTable(){
        DefaultTableModel t = (DefaultTableModel)vServerTable.getModel();
        int rows=t.getRowCount();
        for(int i=0; i<rows; i++){
            t.removeRow(0);
        }
    }
    
    void addToTable(String hostname){
        DefaultTableModel t = (DefaultTableModel)vServerTable.getModel();
        Object[] o = { hostname, "Ready" };
        t.addRow(o);
    }
    
    private void focusOnOldPassword() {
        vOldPassword.requestFocus();
    }
}
